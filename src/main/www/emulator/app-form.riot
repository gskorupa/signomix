<app-form>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <form name="target" id='form0'>
                    <div class="form-group">
                        <legend style="margin-top: 20px;">{labels.section1[props.language]}</legend>
                        <div class="form-group">
                            <label>Device EUI: {state.EUI}</label><br>
                            <label>Device Key: {state.authString}</label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" type="radio" checked
                                    id="radio1" name="url" value="local">  http://localhost:8080/api/integration
                            </label>
                        </div>
                        <div class="form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" type="radio" 
                                   id="radio2" name="url" value="cloud"> https://signomix.com/api/integration
                            </label>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-success" role="alert" if={ state.requestResult == 1 }>
                    <strong style="margin-right: 1rem">{labels.success[props.language]}</strong> {labels.successmessage[props.language]}
                </div>
                <div class="alert alert-warning" role="alert" if={ state.requestResult == 3 }>
                    <strong style="margin-right: 1rem">{labels.validation[props.language]}</strong> {labels.validationmessage[props.language]}
                </div>
                <div class="alert alert-danger" role="alert" if={ state.requestResult == 2 }>
                    <strong style="margin-right: 1rem">{labels.error[props.language]}</strong> {labels.errormessage[props.language]}
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <form onsubmit={ add } id='form1'>
                    <legend>{labels.section2[props.language]}</legend>
                    <div class="form-group">
                        <label for="tem">{labels.temperature[props.language]}</label>
                        <input pattern="-?\d+(\.\d+)?" id="tem" name="tem" oninput="{resetStatus}" class="form-control" autofocus required>
                    </div>
                    <div class="form-group">
                        <label for="hum">{labels.humidity[props.language]}</label>
                        <input pattern="-?\d+(\.\d+)?" id="hum" name="hum" oninput="{resetStatus}" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="lat">{labels.latitude[props.language]}</label>
                        <input pattern="-?\d+(\.\d+)?" id="lat" oninput="{resetStatus}" name="lat" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="lon">{labels.longitude[props.language]}</label>
                        <input pattern="-?\d+(\.\d+)?" id="lon" oninput="{resetStatus}" name="lon" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="dt">{labels.datetime[props.language]}</label>
                        <input type="datetime" id="dt" name="dt" class="form-control" oninput="{resetStatus}" value="{new Date().toISOString()}" required>
                    </div>
                    <button type="subimt" class="btn btn-primary">{labels.send[props.language]}</button>
                </form>
            </div>
        </div>
    </div>
    <script charset="UTF-8">
        export default {
        onMounted() {
            this.update({
                EUI:"IOT-EMULATOR",
                authString:"6022140857",
                localURL:true,
                productionURL:false,
                requestResult: 0,
                apiURL: 'http://localhost:8080/api/integration'
            })
        },        
        validate(tmpData){
            console.log('validating')
            try{
                var t = parseFloat(tmpData.payload_fields[0].value)
                var h = parseFloat(tmpData.payload_fields[1].value)
                console.log(''+t+''+isNaN(t)+' '+h+''+isNaN(h))
                if (h < 0 || h > 100){
                    return false
                }
            } catch (err){
                return false;
            }
            if (new Date(tmpData.time).toString().startsWith('Invalid')){
                return false;
            }
            return true
        },
        processResult(status, response){
            if(status==200 || status==201){
                this.state.requestResult=1
            }else{
                this.state.requestResult=2
            }
            this.update()
        },
        resetStatus(e){
            e.preventDefault()
            this.state.requestResult=0
            this.update()
        },
        add(e) {
            e.preventDefault()
            var targetUrl=this.$('#form0').url.value
            if('cloud'==targetUrl){
                this.state.apiURL='https://signomix.com/api/integration'
            }else{
                this.state.apiURL='http://localhost:8080/api/integration'
            }
            var form=this.$('#form1')
            var data = {
                dev_eui: this.state.EUI,
                time:form.dt.value,
                payload_fields: []
            }
            var field = {
                name:"Temperature",
                value:form.tem.value
            }
            data.payload_fields.push(field)
            var field2 = {
                name:"humidity",
                value:form.hum.value
            }
            data.payload_fields.push(field2)
            var field3 = {
                name:"latitude",
                value:form.lat.value
            }
            data.payload_fields.push(field3)
            var field4 = {
                name:"longitude",
                value: form.lon.value
            }
            data.payload_fields.push(field4)
            console.log(data)
            if (!this.validate(data)){
                this.state.requestResult=3
                this.update()
            }else{
                sendJsonData(
                data,
                "POST",
                this.state.apiURL,
                this.processResult,
                "Authorization",
                this.state.authString
                )
            }
        },
        labels: {
            section1: {
                en: "Target system",
                pl: "Docelowy system"
            },
            section2: {
                en: "Data to send",
                pl: "Dane do wysłania"
            },
            send: {
                en: "Send",
                pl: "Prześlij"
            },
            temperature: {
                en: "temperature",
                pl: "temperatura"
            },
            humidity: {
                en: "humidity",
                pl: "wilgotność"
            },
            latitude: {
                en: "latitude",
                pl: "latitude"
            },
            longitude: {
                en: "longitude",
                pl: "longitude"
            },
            datetime: {
                en: "date & time",
                pl: "data i godzina"
            },
            error: {
                en: "Error!",
                pl: "Błąd!"
            }, 
            success: {
                en: "Success!",
                pl: "Sukces!"
            }, 
            validation: {
                en: "Warning!",
                pl: "Uwaga!"
            }, 
            errormessage: {
                en: "A problem has been occurred while submitting your data.",
                pl: "Podczas wysyłania danych wystąpił błąd."
            }, 
            successmessage: {
                en: "Your message has been sent successfully.",
                pl: "Twoje dane zostały pomyślnie wysłane."
            }, 
            validationmessage: {
                en: "Invalid data.",
                pl: "Niepoprawne dane."
            }
        }
    }
    </script>
</app-form>